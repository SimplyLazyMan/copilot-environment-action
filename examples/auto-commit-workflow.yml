name: 'Copilot with Auto-Commit Example'

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  copilot-with-auto-commit:
    name: 'Copilot Environment with Auto-Commit'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Copilot Environment with Auto-Commit
        id: copilot-env
        uses: SimplyLazyMan/copilot-environment-action@v1
        with:
          operation: 'auto'
          flutter-version: '3.35.1'
          node-version: '20'
          auto-commit: 'true'
          commit-message: 'feat: automated improvements by GitHub Copilot'
          auto-push: 'true'
          target-branch: 'main'
          debug: 'true'

      # Your Copilot work happens automatically here
      # The environment is set up, changes are made, and then cleaned up with auto-commit

      - name: Check Commit Status
        if: steps.copilot-env.outputs.changes-committed == 'true'
        run: |
          echo "‚úÖ Changes were successfully committed"
          echo "Commit message: 'feat: automated improvements by GitHub Copilot'"

      - name: Check Push Status
        if: steps.copilot-env.outputs.changes-pushed == 'true'
        run: |
          echo "‚úÖ Changes were successfully pushed to repository"
          echo "Target branch: main"

      - name: Handle Commit Failure
        if: steps.copilot-env.outputs.changes-committed == 'false'
        run: |
          echo "‚ö†Ô∏è No changes to commit or commit failed"
          echo "This is normal if no files were modified during the Copilot session"

      - name: Environment Status Report
        run: |
          echo "## Copilot Environment Report"
          echo "- Setup Successful: ${{ steps.copilot-env.outputs.setup-successful }}"
          echo "- Environment Ready: ${{ steps.copilot-env.outputs.environment-ready }}"
          echo "- Hooks Disabled: ${{ steps.copilot-env.outputs.hooks-disabled }}"
          echo "- Changes Committed: ${{ steps.copilot-env.outputs.changes-committed }}"
          echo "- Changes Pushed: ${{ steps.copilot-env.outputs.changes-pushed }}"

  copilot-commit-only:
    name: 'Copilot with Commit Only (No Push)'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Copilot Environment (Commit Only)
        id: copilot-commit
        uses: SimplyLazyMan/copilot-environment-action@v1
        with:
          operation: 'auto'
          auto-commit: 'true'
          commit-message: 'chore: copilot environment changes (commit only)'
          auto-push: 'false' # Don't push, just commit locally
          debug: 'true'

      - name: Manual Push After Review
        if: steps.copilot-commit.outputs.changes-committed == 'true'
        run: |
          echo "Changes committed but not pushed"
          echo "You can review the commit and push manually if needed"
          # git push origin main  # Uncomment to push manually

  copilot-branch-workflow:
    name: 'Copilot with Feature Branch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Feature Branch
        run: |
          git checkout -b copilot-improvements-$(date +%Y%m%d-%H%M%S)
          echo "BRANCH_NAME=$(git branch --show-current)" >> $GITHUB_ENV

      - name: Setup Copilot Environment (Feature Branch)
        id: copilot-branch
        uses: SimplyLazyMan/copilot-environment-action@v1
        with:
          operation: 'auto'
          auto-commit: 'true'
          commit-message: 'feat: automated improvements by GitHub Copilot'
          auto-push: 'true'
          target-branch: ${{ env.BRANCH_NAME }}
          debug: 'true'

      - name: Create Pull Request
        if: steps.copilot-branch.outputs.changes-pushed == 'true'
        uses: repo-sync/github-create-pull-request@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: ${{ env.BRANCH_NAME }}
          destination_branch: 'main'
          pr_title: 'Automated improvements by GitHub Copilot'
          pr_body: |
            This PR contains automated improvements generated by GitHub Copilot.

            ## Changes Made
            - Automated environment setup and cleanup
            - Code improvements and optimizations

            ## Review Notes
            - Please review all changes carefully
            - Ensure functionality is preserved
            - Test in a staging environment if needed

            Created by: Copilot Environment Action
            Branch: ${{ env.BRANCH_NAME }}

  copilot-with-error-handling:
    name: 'Copilot with Comprehensive Error Handling'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Copilot Environment with Error Handling
        id: copilot-error
        uses: SimplyLazyMan/copilot-environment-action@v1
        continue-on-error: true
        with:
          operation: 'auto'
          auto-commit: 'true'
          commit-message: 'feat: copilot improvements with error handling'
          auto-push: 'true'
          target-branch: 'main'
          debug: 'true'

      - name: Handle Setup Failure
        if: steps.copilot-error.outputs.setup-successful != 'true'
        run: |
          echo "‚ùå Copilot environment setup failed"
          echo "Attempting manual cleanup..."
          # Manual cleanup if needed

      - name: Handle Commit Failure
        if: steps.copilot-error.outputs.setup-successful == 'true' && steps.copilot-error.outputs.changes-committed != 'true'
        run: |
          echo "‚ö†Ô∏è Environment setup succeeded but commit failed"
          echo "Manual commit may be required"
          git status
          git diff --name-only

      - name: Handle Push Failure
        if: steps.copilot-error.outputs.changes-committed == 'true' && steps.copilot-error.outputs.changes-pushed != 'true'
        run: |
          echo "‚ö†Ô∏è Commit succeeded but push failed"
          echo "Attempting manual push..."
          git push origin main || echo "Manual push also failed - check repository permissions"

      - name: Success Summary
        if: steps.copilot-error.outputs.changes-pushed == 'true'
        run: |
          echo "üéâ Complete success!"
          echo "‚úÖ Environment setup: successful"
          echo "‚úÖ Changes committed: successful" 
          echo "‚úÖ Changes pushed: successful"
